C51 COMPILER V9.60.7.0   MAIN                                                              04/18/2024 15:38:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Program Files (x86)\keil\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*------------------------------------------------------------------*/
   2          /* --- Knight20        ---------------------------------------------*/
   3          /* --- 淘宝店铺：http://t.cn/A6wYQcoq--------------- ----------------*/
   4          /* --- Mobile: (86)13535549442 -------------------------------------*/
   5          
   6          
   7          #include "reg51.h"
   8          #include "intrins.h"
   9          #include "stdio.h"
  10          typedef unsigned char BYTE;
  11          typedef unsigned int WORD;
  12          
  13          #define FOSC 11059200L      //System frequency
  14          #define BAUD 4800           //UART baudrate
  15          
  16          /*Define UART parity mode*/
  17          #define NONE_PARITY     0   //None parity
  18          #define ODD_PARITY      1   //Odd parity
  19          #define EVEN_PARITY     2   //Even parity
  20          #define MARK_PARITY     3   //Mark parity
  21          #define SPACE_PARITY    4   //Space parity
  22          
  23          #define PARITYBIT EVEN_PARITY   //Testing even parity
  24          
  25          sbit bit9 = P2^2;           //P2.2 show UART data bit9
  26          bit busy;
  27          
  28          bit start=0;//用于串口启动接收状态
  29          unsigned char count=0,buf[100],time=0;//用于串口计算，串口数据，及超时
  30          
  31          void SendData(BYTE dat);
  32          void SendString(char *s);
  33          void Data_Processing();//数据处理
  34          void delay1ms(void);
  35          //电压系数和电流系数和模块使用的电阻阻值有关
  36          float Ue=1.88;//模块的电压系数
  37          
  38          float Ce=0.333;//10A量程模块的电流系数
  39          //float Ce=1.0;//30A量程模块的电流系数
  40          void main()
  41          {
  42   1              BYTE i=0;
  43   1      #if (PARITYBIT == NONE_PARITY)
                  SCON = 0x50;            //8-bit variable UART
              #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
  46   1          SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
  47   1      #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  50   1      
  51   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  52   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  53   1          TR1 = 1;                //Timer1 start run
  54   1          ES = 1;                 //Enable UART interrupt
C51 COMPILER V9.60.7.0   MAIN                                                              04/18/2024 15:38:49 PAGE 2   

  55   1          EA = 1;                 //Open master interrupt switch
  56   1      
  57   1          SendString("HLW8032 Text!\r\n");
  58   1          while(1)
  59   1              {
  60   2                      if(start)
  61   2                      {
  62   3                              time++;
  63   3                              if(time>5)
  64   3                              {
  65   4                                      time=0;
  66   4                                      if(buf[1]==0x5a&&count==24)
  67   4                                      {
  68   5                                              Data_Processing();//电量数据处理
  69   5                                              for(i=0;i<count;i++)
  70   5                                                      buf[i]=0;
  71   5                                      }
  72   4                                      count=0;
  73   4                                      start=0;
  74   4                              }
  75   3                              delay1ms();
  76   3                      }
  77   2              }
  78   1      }
  79          void Data_Processing()//数据处理
  80          {
  81   1          long VP_REG=0,V_REG=0,CP_REG=0,C_REG=0,PP_REG=0,P_REG=0;
  82   1              unsigned int PF=0,PF_COUNT=0;
  83   1              double V=0,C=0,P=0,E_con=0;
  84   1              unsigned char temp[80];
  85   1              if(buf[0]!=0xaa)//芯片误差修正功能正常，参数正常
  86   1              {
  87   2                      VP_REG=buf[2]*65536+buf[3]*256+buf[4];//计算电压参数寄存器
  88   2                      V_REG=buf[5]*65536+buf[6]*256+buf[7];//计算电压寄存器
  89   2                      V=(VP_REG/V_REG)*Ue;//计算电压值，1.88为电压系数，根据所采用的分压电阻大小来确定
  90   2                      sprintf(temp,"电压值：%0.2fV; ",V);
  91   2                      SendString(temp);
  92   2                      
  93   2                      CP_REG=buf[8]*65536+buf[9]*256+buf[10];//计算电流参数寄存器
  94   2                      C_REG=buf[11]*65536+buf[12]*256+buf[13];//计算电流寄存器
  95   2                      C=((CP_REG*Ce*100)/C_REG)/100.0;//计算电流值
  96   2      
  97   2                      sprintf(temp,"电流值：%0.3fA; ",C);
  98   2                      SendString(temp);
  99   2                      //printf(" %X ",USART2_RX_BUF[0]);
 100   2                      
 101   2                      if(buf[0]>0xf0)//判断实时功率是否未溢出
 102   2                      {
 103   3                              SendString("No Device!");//功耗过低，未接用电设备
 104   3                              
 105   3                      }
 106   2                      else
 107   2                      {
 108   3                              PP_REG=buf[14]*65536+buf[15]*256+buf[16];//计算功率参数寄存
 109   3                              P_REG=buf[17]*65536+buf[18]*256+buf[19];//计算功率寄存器
 110   3                              P=(PP_REG/P_REG)*Ue*Ce;//计算有效功率
 111   3                              sprintf(temp,"有效功率：%0.2fW; ",P);
 112   3                              SendString(temp);
 113   3                      }
 114   2                      
 115   2      
 116   2                      PF=(buf[21]*256)+buf[22];//计算已用电量脉冲数
C51 COMPILER V9.60.7.0   MAIN                                                              04/18/2024 15:38:49 PAGE 3   

 117   2                      //因为51系列单片机比较难运算超过十万的数据，所以这里不计算用电量，只显示用电脉冲
 118   2                      //1度电对应的脉冲数量一般大于10万
 119   2                      //PF_COUNT=((100000*3600)/(PP_REG*Ue*Ce))*10000;//计算1度电对应的脉冲数量
 120   2                      //E_con=((PF*10000)/PF_COUNT)/10000.0;//计算已用电量
 121   2                      //printf(" %d %d ",PF,PF_COUNT);
 122   2      
 123   2                      sprintf(temp,"已用脉冲：%d\r\n",PF);
 124   2                      SendString(temp);
 125   2              }
 126   1              else//芯片误差修正功能失效
 127   1              {
 128   2                      SendString("data error\r\n");
 129   2              }
 130   1      }
 131          void delay1ms(void)   //误差 -0.651041666667us
 132          {
 133   1          unsigned char a,b;
 134   1          for(b=4;b>0;b--)
 135   1              for(a=113;a>0;a--);
 136   1      }
 137          /*----------------------------
 138          UART interrupt service routine
 139          ----------------------------*/
 140          void Uart_Isr() interrupt 4
 141          {
 142   1          if (RI)
 143   1          {
 144   2                      time=0;
 145   2                      if(!start) start=1;
 146   2              RI = 0;             //Clear receive interrupt flag
 147   2              buf[count++] = SBUF;          //P0 show UART data
 148   2              bit9 = RB8;         //P2.2 show parity bit
 149   2          }
 150   1          if (TI)
 151   1          {
 152   2              TI = 0;             //Clear transmit interrupt flag
 153   2              busy = 0;           //Clear transmit busy flag
 154   2          }
 155   1      }
 156          
 157          /*----------------------------
 158          Send a byte data to UART
 159          Input: dat (data to be sent)
 160          Output:None
 161          ----------------------------*/
 162          void SendData(BYTE dat)
 163          {
 164   1          while (busy);           //Wait for the completion of the previous data is sent
 165   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
 166   1          if (P)                  //Set the parity bit according to P
 167   1          {
 168   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
 171   2              TB8 = 1;            //Set parity bit to 1
 172   2      #endif
 173   2          }
 174   1          else
 175   1          {
 176   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
C51 COMPILER V9.60.7.0   MAIN                                                              04/18/2024 15:38:49 PAGE 4   

 179   2              TB8 = 0;            //Set parity bit to 0
 180   2      #endif
 181   2          }
 182   1          busy = 1;
 183   1          SBUF = ACC;             //Send data to UART buffer
 184   1      }
 185          
 186          /*----------------------------
 187          Send a string to UART
 188          Input: s (address of string)
 189          Output:None
 190          ----------------------------*/
 191          void SendString(char *s)
 192          {
 193   1          while (*s)              //Check the end of the string
 194   1          {
 195   2              SendData(*s++);     //Send current char and increment string ptr
 196   2          }
 197   1      }
 198          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1263    ----
   CONSTANT SIZE    =    108    ----
   XDATA SIZE       =    110     128
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
